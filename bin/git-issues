#!/usr/bin/env ruby

require 'thor'
require 'bitbucket_rest_api'
require 'zlog'
require 'highline/import'
require 'git-issues'

class GitIssuesCLI < Thor
  Log = Logging.logger[self]
  GI = GitIssues.new
  CLI = HighLine.new

  desc "list", "list issues of a repository"
  method_options :all => :boolean
  def list
    repos = GI.gitReposFor '.', :bitbucket
    if repos.empty?
      Log.abort "No bitbucket repositories found."
    end
    repo = repos.first

    user = 'arlimus'
    password = get_password("Enter password for #{user}")
    bitbucket = BitBucket.new login: user, password: password
    issues = bitbucket.issues.list_repo(repo['user'], repo['repo'])

    # filter closed issues if the user doesn't want all
    if not options.all
      issues = issues.find_all{|i|
        'resolved' != i['status']
      }
    end

    issues.each do |i|
      puts "%-3i | %-8s | %s" % [ i['local_id'], i['status'], i['title'] ]
    end
  end

  private

  def get_password(prompt="Enter Password")
    CLI.ask(prompt){|q| q.echo = '*'}
  end

end

GitIssuesCLI.start(ARGV)
